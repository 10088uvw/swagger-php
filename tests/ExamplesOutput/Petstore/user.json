{
	"apiVersion": "1.0.0",
	"swaggerVersion": "1.2",
	"basePath": "http://localhost:8002/api",
	"resourcePath": "/user",
	"produces": [
		"application/json"
	],
	"apis": [
		{
			"path": "/user/{username}",
			"operations": [
				{
					"method": "GET",
					"summary": "Get user by user name",
					"notes": "",
					"type": "User",
					"nickname": "getUserByName",
					"parameters": [
						{
							"name": "username",
							"description": "The name that needs to be fetched. Use user1 for testing.",
							"required": true,
							"type": "string",
							"paramType": "path"
						}
					],
					"responseMessages": [
						{
							"code": 400,
							"message": "Invalid username supplied"
						},
						{
							"code": 404,
							"message": "User not found"
						}
					]
				}
			]
		},
		{
			"path": "/user/login",
			"operations": [
				{
					"method": "GET",
					"summary": "Logs user into the system",
					"notes": "",
					"type": "string",
					"nickname": "loginUser",
					"parameters": [
						{
							"name": "username",
							"description": "The user name for login",
							"required": true,
							"type": "string",
							"paramType": "query"
						},
						{
							"name": "password",
							"description": "The password for login in clear text",
							"required": true,
							"type": "string",
							"paramType": "query"
						}
					],
					"responseMessages": [
						{
							"code": 400,
							"message": "Invalid username and password combination"
						}
					]
				}
			]
		},
		{
			"path": "/user/logout",
			"operations": [
				{
					"method": "GET",
					"summary": "Logs out current logged in user session",
					"notes": "",
					"type": "void",
					"nickname": "logoutUser"
				}
			]
		}
	],
	"models": {
		"User": {
			"id": "User",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"firstName": {
					"type": "string"
				},
				"username": {
					"type": "string"
				},
				"lastName": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"password": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"userStatus": {
					"type": "integer",
					"format": "int32",
					"description": "User Status",
					"enum": [
						"1-registered",
						"2-active",
						"3-closed"
					]
				}
			}
		}
	}
}